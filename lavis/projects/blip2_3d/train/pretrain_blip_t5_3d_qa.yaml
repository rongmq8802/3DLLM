model:
  arch: blip2_t5_scanqa                  # 对应于类型的名字, 在注册表里注册的名字
  model_type: blip2_t5_scanqa        # 这是对应于config/models/xxxx.json 里面有模型的具体参数细节, 上面的类里面会根据 model_type 的值选择不同的yaml加载
  # TODO: support stage 1 pretraining from scratch (load_pretrained=False does not have effect as of now)
  load_pretrained: False
  mask_embedding: False


datasets:
  scanqa:                     # 数据集的名字, 对应于 Builder, 然后对应于 config/datasets/point_cloud/xxxx.json
    vis_processor:
      train:
        name: "cloud_train"
        max_size: 65536
      eval:                       # eval 等价于 val + test
        name: "cloud_test"
        max_size: 65536
    text_processor:
      train:
        name: "blip_question"   
      eval:
        name: "blip_question"


run:
  task: scanqa_pretrain
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-4
  min_lr: 1e-5
  warmup_lr: 1e-8
  warmup_steps: 1000
  weight_decay: 0.05
  max_epoch: 100
  batch_size_train: 4
  batch_size_eval: 4
  num_workers: 4
  accum_grad_iters: 1

  max_len: 40
  min_len: 1
  num_beams: 5
 
  inference_method: "generate"

  seed: 42
  output_dir: "/home/rmq2/3DLLM_2/lavis/outputs"

  amp: True
  resume_ckpt_path:
  evaluate: False
  train_splits: ["train"]
  valid_splits: ["val"]
  test_splits: ["test"]

  device: "cuda"
  world_size: 16
  dist_url: "env://"
  distributed: True